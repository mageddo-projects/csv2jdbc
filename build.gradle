/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.0/userguide/building_java_projects.html
 */
//
//buildscript {
//  repositories {
//    mavenCentral()
//  }
//  dependencies {
////    classpath("org.antlr:antlr4:4.11.1")
//  }
//}

plugins {
  // Apply the java-library plugin for API and implementation separation.
  id 'java-library'
  id "antlr"
  id "com.github.johnrengelman.shadow" version "7.1.2"
}

repositories {
  // Use Maven Central for resolving dependencies.
  mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

//sourceSets {
//  main {
//    compileClasspath -= configurations.antlr
////    runtimeClasspath -= configurations.antlr
//  }
//}

dependencies {

  antlr("org.antlr:antlr4:4.11.1")

  api("org.antlr:antlr4-runtime:4.11.1")

  compileOnly 'org.projectlombok:lombok:1.18.24'
  annotationProcessor 'org.projectlombok:lombok:1.18.24'

  implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.6'
  implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.9.0'

  testCompileOnly 'org.projectlombok:lombok:1.18.24'
  testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
  testImplementation group: 'com.h2database', name: 'h2', version: '2.1.214'
  testImplementation 'org.jdbi:jdbi3-core:3.36.0'
  testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.4.5'


}

tasks.named('test') {
  // Use junit platform for unit tests.
  useJUnitPlatform()
}

compileTestJava {
  sourceCompatibility = JavaVersion.VERSION_17
  targetCompatibility = JavaVersion.VERSION_17
}

shadowJar {
//  configurations = [project.configurations.compileClasspath]
//  configurations = [project.configurations.runtimeClasspath]
  // https://imperceptiblethoughts.com/shadow/configuration/dependencies/#filtering-dependencies
  dependencies {
    exclude(dependency('org.antlr:antlr4:'))
    exclude(dependency(':antlr-runtime:'))
    exclude(dependency(':ST4:'))
    exclude(dependency(':org.abego.treelayout.core:'))
    exclude(dependency(':javax.json:'))
    exclude(dependency(':icu4j:'))
    exclude(dependency {
      println("=>>> ${it}")
    })
  }
  relocate 'org.apache.commons.csv', 'com.mageddo.thirdparty.org.apache.commons.csv'
}
assemble.dependsOn shadowJar

generateGrammarSource {
  outputDirectory = file("${outputDirectory}/com/mageddo/antlr")
//  arguments += ['-package', 'org.mellowd.compiler']
}
